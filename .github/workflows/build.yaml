name: CI-Build
on:
  # push„Åï„Çå„Åü„Çâbuild
  push:
  # Workflow„Çí‰ªñ„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„Åã„ÇâÂëº„Åπ„Çã„Çà„ÅÜ„Å´„Éª„Éª„Éª
  workflow_call:
    outputs:
        git_hash:
          description: "git hash on build time"
          value: ${{ github.sha }}

env:
  # api-codegen„Åß‰Ωø„ÅÜDocker„ÅÆ„Ç≠„É£„ÉÉ„Ç∑„É•
  PATH_DOCKER_PULL_CACHE: /tmp/docker-img-arch

jobs:
  build:
    name: Build binary
    strategy:
      matrix:
        os:
          # - win
          - linux
        environment:
          - name: "debug"
            opt:
          # - name: "release"
          #   opt: "-release"
        include:
          - os: linux
            runs_os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            files:
              - ./README.md
              # - ./target/x86_64-unknown-linux-gnu/$ENVIRONMENT/peercast-re # ‰ªä„ÅØÁÑ°Âäπ
              - ./target/x86_64-unknown-linux-gnu/$ENVIRONMENT/peercast-port-checkerd
              - ./target/x86_64-unknown-linux-gnu/$ENVIRONMENT/peercast-root

    runs-on: ${{ matrix.runs_os }}

    outputs:
      artifact_name: ${{ steps.upload_artifact.outputs.artifact_name }}

    env:
      OUTPUT_FILENAME: "${{ matrix.os }}-${{ matrix.environment }}-${{ github.sha }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  #üëà„É™„Éù„Ç∏„Éà„É™„ÅÆ„ÇΩ„Éº„Çπ„ÇíÊåÅ„Å£„Å¶„Åè„Çã

      - name: List files
        run: ls

      - name: working directory
        run: pwd

      # API-CODEGEN
      - name: Build api-codegen
        run: ./libpeercast-re-apis/build.sh

      # Build client web module
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: "./peercast-re/client/package-lock.json"
      - name: Install dependencies
        # if: steps.cache-node-restore.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./peercast-re/client
      - name: Build client
        run: npm run build
        working-directory: ./peercast-re/client

      # Build Binary
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # use mold (ld compatible linker)
      - uses: rui314/setup-mold@v1
        with:
          make-default: false


      - name: Run build script
        # run: ./build.sh
        run: cargo build ${{ matrix.environment.opt }} --target ${{ matrix.target }}

      - name: ls build dir
        run: ls target

      - name: ls build target dir
        run: ls target/${{ matrix.target }}/${{ matrix.environment.name }}

      # Runs a set of commands using the runners shell
      - name: Packaging binary
        env:
          ENVIRONMENT: ${{ matrix.environment.name }}
        run: |
          mkdir dist
          cp -a ${{ join(matrix.files, ' ') }} ./dist
          tar -c -z -v -f ${{ env.OUTPUT_FILENAME }}.tar.gz dist

      # artifacts
      - name: Upload artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: ${{ env.OUTPUT_FILENAME }}.tar.gz
          retention-days: 7
          compression-level: 0 # no compression



