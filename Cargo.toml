[package]
name = "peercast-re"
version = "0.1.2"
edition = "2021"
repository = "https://github.com/tetsuyainfra/peercast-re"
authors = ["tetsuyainfra <tetsuyainfra@gmail.com>"]


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# default-run = "peercast-re"
# default-run = "rtmp"
#default-run = "relay"
default-run = "peercast-root"
build = "build.rs"


[dependencies]
peercast-re-api = { path = "./gen/rust" }

aquamarine = {version  ="0.6.0" }

# Error handling
thiserror = { version = "2.0.11" }
anyhow = { version = "1.0.95" }

# tracing logging
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "json","fmt", "local-time"] }
tracing-futures = "0.2"
tracing-attributes = "0.1"
tracing-appender = "0.2"
tracing-test = "0.2.5"
tracing-log = { version = "0.2.0"}

time = {version = "*", features = ["formatting"]}

# log = "0.4"

# バイナリ操作
bytes = { version = "1.10.0", features = ["serde"] }
byteorder = "1"
nom = { version = "8.0.0" }

flavors = { git = "https://github.com/rust-av/flavors", rev = "833508af656d298c269f2397c8541a084264d992" }

# 数値操作(cast等)
num = "0.4.3"

# 非同期処理
futures-util = { version = "0.3.31", default-features = false, features = [
    "alloc",
] }
tokio = { version = "1.43.0", features = ["full", "tracing"] }
tokio-stream = { version = "0.1.17" }
tokio-test = { version = "0.4.4" }
tokio-util = { version = "0.7.13", features = ["rt"]}
console-subscriber = { version = "0.4.1" }
tokio-graceful-shutdown = {version = "0.16.0", features = ["tracing"]}

# ip adrees range
ipnet = { version = "2.11.0", features = ["serde"] }

# http
http = { version = "1.2.0" }
httparse = { version = "1.10.0" }

# http-server

axum-core = { version = "*" }
axum = { version = "0.8.1", features = ["tokio", "form", "ws", "tracing"] }
axum-extra = { version = "0.10.0" }
# axum = { git = "https://github.com/tokio-rs/axum", branch = "main", features = [
#     "form",
#     "ws",
#     "tracing",
# ] }
tower = { version = "0.5.2" }
tower-http = { version = "0.6.2", features = [
    "fs",
    "trace",
    "cors",
    "util",
    "request-id",
    "timeout",
] }
# tower-hyper-http-body-compat = { version = "0.2.0", features = [
# "http1",
# "server",
# ] }
# hyper = { version = "0.14", features = ["full"] }
hyper = { version = "1.6.0", features = ["full"] }
hyper-util = { version = "0.1.10", features = ["full"] }
# hyper-util = { git = "https://github.com/hyperium/hyper-util", rev = "f898015", features = [
# "full",
# ] }


# HTML Template engine
askama = { version = "0.12.1", features = ["mime", "mime_guess"] }
# askama_axum = { version = "0.3.0" }
minijinja = { version = "2.7.0", features = ["loader"] }
# axum-template = { version = "0.19.0", features = ["minijinja"] }

# Serialize/Deserialize
serde = { version = "1.0.217", features = ["derive"] }
# serde_derive = { version = "1.0" } # serde features = ["derive"]しているので必要ない
serde_json = "1.0.138"


# Future
# pin-project-lite = "0.2.16"
pin-project = "1.1.9"

sync_wrapper = "1.0.2"

# AsyncTraitを作る
async-trait = "0.1.86"

# tokio-towerのコードをTESTする用
# async-bincode = "0.7"

# commandline argment
clap = { version = "4.5.27", features = ["derive", "env", "unicode"] }
clap-verbosity-flag = { version = "3.0.2", features = ["tracing"] }

# demonize
daemonize = "0.5.0"

# url
url = { version = "2.5.4" }

# http/get
# ureq = { version = "2.5" }

# embed file
rust-embed = { version = "8.5.0", features = [
    "include-exclude",
    "debug-embed",
] }
# debug-embed
# compression
mime_guess = { version = "2.0.5" }

# Timezoneなどを取り扱い
chrono = { version = "0.4", features = ["serde"] }
chrono-tz = "0.10.1"

# GnuId
uuid = { version = "1.11.0", features = [
    "v4",                # Lets you generate random UUIDs
    "v7",                # Version 7 UUIDs using a Unix timestamp.
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
] }

# password
pbkdf2 = { version = "0.12", features = ["simple"] }
rand_core = { version = "0.6.4", features = ["std"]}

# ini
rust-ini = { version = "0.21.1", features = ["inline-comment"] }

# macro utilities
paste = "1.0.15"

# RTMP
# amf = "1.0.0"
rml_amf0 = "0.3.0"
rml_rtmp = "0.8.0"

# Units(単位系)
# ubyte = "0.10.3"

# Units(単位系) 人間向け
human_bytes = "0.4.3"

# Global Variable (for Lazy[Cell])
once_cell = "1.20.3"

# Home direcotry
dirs = "5.0.1"

# doucment string
indoc = "2.0.5"
reqwest = { version = "0.12.12", features = ["stream"] }

# merge member vaiable
merge = "0.1.0"

# prcess exit code
exitcode = "1"
bitflags = "2.8.0"

# Utopia for OpenApi(Swagger) this crate for axum 0.6
# utoipa = { version = "3.5.0", features = [
#   "axum_extras",
# ] }
# utoipa-swagger-ui = { version = "3.1.5", features = ["axum"] }
# utoipa-redoc = { version = "0.1.0", features = ["axum"] }
# utoipa-rapidoc = { version = "0.1.0", features = ["axum"] }

#
#  Use for peercast-port-checkerd
#
# axum-client-ip = { version ="0.4.2", optional = true }
axum-client-ip = { version = "0.7.0" }

#
#  Use for daemon
#
# daemonize ={ version = "*", optional = true }
# daemonize ={ version = "*" }
tracing-journald = "0.3.1"

# Use for using buildtime-infomation by vergen
vergen-pretty = { version = "0.3.9", features = ["header"] }


[dev-dependencies]
criterion = { version = "0.5.1", features = ["stable", "async_tokio"] }
tonic = { version = "0.12.3" }


[build-dependencies]
npm_rs = { version = "1.0.0" }
embed-resource = "3.0.1"

# Buildtime generate info
# vergen = { version = "9.0.4", features = ["build", "cargo", "rustc", "si"] }
vergen = { version = "9.0.4", features = ["build", "cargo", "rustc"] }
vergen-git2 = { version = "1.0.5" }
# vergen = { version = "9.0.0", features = ["build"] }

[features]
# ppc-server = ["dep:axum-client-ip"]
# daemon = ["dep:daemonize"]

# [[bin]]
# name = "peercast-port-checkerd"
# required-features = ["ppc-server"]

# [[bin]]
# name = "daemon-example"
# required-features = ["daemon"]

[[bench]]
name = "bench_main"
harness = false


#
# Debian Package
#
[package.metadata.deb]
depends = "$auto, systemd"
extended-description = "simple hello world test"
section = "admin"
priority = "optional"
assets = [
    ["target/release/peercast-root", "usr/local/bin/peercast-root", "755"],
    ["debian/peercast-root.service", "/lib/systemd/system/peercast-root.service", "644"],
    ["debian/default/peercast-root", "/etc/default/peercast-root", "644"],

    ["target/release/peercast-port-checkerd", "usr/local/bin/peercast-port-checkerd", "755"],
    ["debian/peercast-port-checkerd.service", "/lib/systemd/system/peercast-port-checkerd.service", "644"],
    ["debian/default/peercast-port-checkerd", "/etc/default/peercast-port-checkerd", "644"],
]

# こっちのオプションは*.service unitファイル/install scriptを自分で追加するときに指定する
maintainer-scripts = "debian/scripts"

